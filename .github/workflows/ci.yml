# .github/workflows/ci.yml

name: CI Pipeline

on:
  push:
    branches:
      - main
      - feature/*
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: root_password
          MYSQL_DATABASE: income_expense_db
          MYSQL_USER: user
          MYSQL_PASSWORD: user_password
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_USER: user
          MYSQL_PASSWORD: user_password
          MYSQL_DB: income_expense_db
        run: |
          python -m unittest discover -s tests

      - name: Security Scan with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: gracetriana/income-expense-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t gracetriana/income-expense-app:latest .
          docker push gracetriana/income-expense-app:latest

      - name: Deploy to Staging
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.STAGING_HOST }}
          USER: ${{ secrets.SSH_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa $USER@$HOST << 'EOF'
            docker pull gracetriana/income-expense-app:latest
            docker stop income-expense-app || true
            docker rm income-expense-app || true
            docker run -d --name income-expense-app -p 5000:5000 gracetriana/income-expense-app:latest
          EOF
